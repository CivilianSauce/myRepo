Ya, sangat mungkin! Satu IP bisa menampilkan **dua atau lebih website berbeda tanpa mengubah port**, menggunakan **Name-Based Virtual Hosts** di Apache.  

### **Bagaimana Cara Kerjanya?**  
Apache dapat membedakan website berdasarkan **domain (ServerName)** yang diketik oleh pengguna. Jadi, meskipun semua website berjalan di **port 80 (HTTP) atau 443 (HTTPS)**, Apache akan mengarahkan permintaan ke direktori yang sesuai berdasarkan nama domainnya.  

---

### **Konfigurasi Apache untuk Menjalankan 2 Website di 1 IP (Tanpa Ubah Port)**
Misalkan kita punya dua domain (jika belum punya, buat DNS terlebih dahulu):  
- `website1.com`
- `website2.com`  

Keduanya akan berjalan di **port 80** pada **satu IP**.

#### **1. Buat Direktori untuk Masing-Masing Website**
```bash
sudo mkdir -p /var/www/website1
sudo mkdir -p /var/www/website2
```

#### **2. Buat Halaman Sederhana untuk Masing-Masing Website**
```bash
echo "<h1>Website 1</h1>" | sudo tee /var/www/website1/index.html
echo "<h1>Website 2</h1>" | sudo tee /var/www/website2/index.html
```

#### **3. Atur Kepemilikan dan Izin**
```bash
sudo chown -R www-data:www-data /var/www/website1
sudo chown -R www-data:www-data /var/www/website2
sudo chmod -R 755 /var/www
```

#### **4. Buat Konfigurasi Virtual Host untuk Website 1**
```bash
sudo nano /etc/apache2/sites-available/website1.conf
```
Isi file:
```
<VirtualHost *:80>
    ServerName website1.com
    DocumentRoot /var/www/website1
    <Directory /var/www/website1>
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
```

#### **5. Buat Konfigurasi Virtual Host untuk Website 2**
```bash
sudo nano /etc/apache2/sites-available/website2.conf
```
Isi file:
```
<VirtualHost *:80>
    ServerName website2.com
    DocumentRoot /var/www/website2
    <Directory /var/www/website2>
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
```

#### **6. Aktifkan Virtual Hosts**
```bash
sudo a2ensite website1.conf
sudo a2ensite website2.conf
```

#### **7. Restart Apache**
```bash
sudo systemctl restart apache2
```

#### **8. (Opsional) Tambahkan Domain ke File Hosts (Jika Menguji Secara Lokal)**
Jika belum ada DNS, tambahkan ke `/etc/hosts`:
```bash
sudo nano /etc/hosts
```
Tambahkan:
```
127.0.0.1 website1.com
127.0.0.1 website2.com
```

---

### **Hasilnya**
- Jika ada pengguna yang mengakses **http://website1.com**, Apache akan mengarahkan ke `/var/www/website1`.  
- Jika ada pengguna yang mengakses **http://website2.com**, Apache akan mengarahkan ke `/var/www/website2`.  
- Keduanya berjalan di **port 80 dengan satu IP yang sama** tanpa masalah.  

---

### **Bagaimana Jika Menggunakan HTTPS (Port 443)?**
Jika ingin menjalankan keduanya dengan **HTTPS**, Anda perlu:  
1. Menggunakan **sertifikat SSL** yang mendukung **multiple domains** (misalnya **Let's Encrypt dengan mode SAN atau wildcard**).  
2. Menggunakan **VirtualHost di port 443** dengan konfigurasi yang mirip, hanya perlu menambahkan sertifikat SSL.

Mau coba dengan HTTPS juga? ðŸš€
