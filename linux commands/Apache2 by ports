Jika ingin menjalankan dua website di **port yang berbeda**, Anda bisa mengonfigurasi **Virtual Hosts berbasis port** di Apache.  

Misalkan:  
- `website1` berjalan di **port 80**  
- `website2` berjalan di **port 8080**  

### **1. Ubah Konfigurasi Apache agar Mendengarkan Port Tambahan**
Secara default, Apache hanya mendengarkan di port 80. Agar bisa mendengar di port **8080**, kita perlu menambahkannya di file **`ports.conf`**.

```bash
sudo nano /etc/apache2/ports.conf
```
Tambahkan baris berikut jika belum ada:
```
Listen 8080
```
Simpan dan keluar (`CTRL + X`, lalu `Y`, lalu `ENTER`).

### **2. Konfigurasi Virtual Host untuk Website 1 (Port 80)**
Buat file konfigurasi baru untuk website pertama:

```bash
sudo nano /etc/apache2/sites-available/website1.conf
```

Isi file:
```
<VirtualHost *:80>
    ServerName website1.com
    DocumentRoot /var/www/website1
    <Directory /var/www/website1>
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
```

### **3. Konfigurasi Virtual Host untuk Website 2 (Port 8080)**
Buat file konfigurasi baru untuk website kedua:

```bash
sudo nano /etc/apache2/sites-available/website2.conf
```

Isi file:
```
<VirtualHost *:8080>
    ServerName website2.com
    DocumentRoot /var/www/website2
    <Directory /var/www/website2>
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
```

### **4. Aktifkan Virtual Hosts dan Restart Apache**
Aktifkan konfigurasi:
```bash
sudo a2ensite website1.conf
sudo a2ensite website2.conf
```
Restart Apache agar perubahan diterapkan:
```bash
sudo systemctl restart apache2
```

### **5. Tambahkan Domain ke File Hosts (Hanya untuk Pengujian Lokal)**
Jika menguji secara lokal, tambahkan domain ke `/etc/hosts`:
```bash
sudo nano /etc/hosts
```
Tambahkan:
```
127.0.0.1 website1.com
127.0.0.1 website2.com
```

### **6. Uji di Browser**
- **Website 1**: Buka `http://website1.com`  
- **Website 2**: Buka `http://website2.com:8080`  

Jika port 8080 masih tidak bisa diakses, pastikan firewall tidak memblokirnya:
```bash
sudo ufw allow 8080
```

Dengan cara ini, Apache bisa menjalankan dua website secara bersamaan dengan port yang berbeda. ðŸš€
